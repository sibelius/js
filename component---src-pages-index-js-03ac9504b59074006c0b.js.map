{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Grid","styled","label","target","props","theme","gridColumns","Content","maxWidths","general","contentPadding","Index","_ref","edges","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components__WEBPACK_IMPORTED_MODULE_4__","avatar","config","name","location","socialMedia","map","project","date","node","frontmatter","title","cover","childImageSharp","fluid","path","fields","slug","areas","key","propTypes","PropTypes","shape","array","isRequired","pageQuery"],"mappings":"wNAQMA,EAAOC,YAAH,OAAAC,MAAA,cAAAC,OAAA,aAAGF,CAAH,6CAEwB,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,aAF7C,i8GAeJC,EAAUN,YAAH,OAAAC,MAAA,iBAAAC,OAAA,aAAGF,CAAH,yCAEE,SAAAG,GAAK,OAAIA,EAAMC,MAAMG,UAAUC,SAFjC,cAGE,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,gBAHvB,00GAOPC,EAAQ,SAAAC,GAAA,IAEWC,EAFXD,EACZE,KACEC,kBAAqBF,MAFX,OAKZG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,OAAQC,IAAOD,OAAQE,KAAMD,IAAOC,KAAMC,SAAUF,IAAOE,SAAUC,YAAaH,IAAOG,cACjGR,EAAAC,EAAAC,cAACX,EAAD,KACES,EAAAC,EAAAC,cAAClB,EAAD,KACGa,EAAMY,IAAI,SAAAC,GAAO,OAChBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEQ,KAAMD,EAAQE,KAAKC,YAAYF,KAC/BG,MAAOJ,EAAQE,KAAKC,YAAYC,MAChCC,MAAOL,EAAQE,KAAKC,YAAYE,MAAMC,gBAAgBC,MACtDC,KAAMR,EAAQE,KAAKO,OAAOC,KAC1BC,MAAOX,EAAQE,KAAKC,YAAYQ,MAChCD,KAAMV,EAAQE,KAAKO,OAAOC,KAC1BE,IAAKZ,EAAQE,KAAKO,OAAOC,aAQtBzB,YAEfA,EAAM4B,UAAY,CAChBzB,KAAM0B,IAAUC,MAAM,CACpB1B,kBAAmByB,IAAUC,MAAM,CACjC5B,MAAO2B,IAAUE,MAAMC,eAExBA,YAGE,IAAMC,EAAS","file":"component---src-pages-index-js-03ac9504b59074006c0b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport styled from 'react-emotion';\n\nimport { Card, Header, Layout } from 'components';\nimport config from '../../config/site';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.theme.gridColumns}, 1fr);\n  grid-gap: 50px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n\n  .gatsby-image-outer-wrapper,\n  .gatsby-image-wrapper {\n    position: static !important;\n  }\n`;\n\nconst Content = styled.div`\n  margin: -6rem auto 6rem auto;\n  max-width: ${props => props.theme.maxWidths.general};\n  padding: 0 ${props => props.theme.contentPadding} 1.45rem;\n  position: relative;\n`;\n\nconst Index = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n    <Header avatar={config.avatar} name={config.name} location={config.location} socialMedia={config.socialMedia} />\n    <Content>\n      <Grid>\n        {edges.map(project => (\n          <Card\n            date={project.node.frontmatter.date}\n            title={project.node.frontmatter.title}\n            cover={project.node.frontmatter.cover.childImageSharp.fluid}\n            path={project.node.fields.slug}\n            areas={project.node.frontmatter.areas}\n            slug={project.node.fields.slug}\n            key={project.node.fields.slug}\n          />\n        ))}\n      </Grid>\n    </Content>\n  </Layout>\n);\n\nexport default Index;\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 850, quality: 90, traceSVG: { color: \"#328bff\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            date(formatString: \"DD.MM.YYYY\")\n            title\n            areas\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}