{"version":3,"sources":["webpack:///./src/templates/project.js"],"names":["OuterWrapper","styled","label","target","props","theme","contentPadding","InnerWrapper","maxWidths","project","Project","_ref","_ref$pageContext","pageContext","slug","prev","next","_ref$data","data","postNode","images","edges","frontmatter","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components__WEBPACK_IMPORTED_MODULE_7__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","postPath","postSEO","avatar","name","date","areas","text","html","react_overdrive__WEBPACK_IMPORTED_MODULE_5___default","id","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","cover","childImageSharp","map","image","key","node","src","style","margin","propTypes","PropTypes","shape","string","isRequired","object","defaultProps","pageQuery"],"mappings":"8QAWMA,EAAeC,YAAH,OAAAC,MAAA,wBAAAC,OAAA,aAAGF,CAAH,aACH,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,gBADlB,w0JAKZC,EAAeN,YAAH,OAAAC,MAAA,wBAAAC,OAAA,aAAGF,CAAH,+BAEH,SAAAG,GAAK,OAAOA,EAAMC,MAAMG,UAAUC,QAA7B,MAFF,8zJAMZC,EAAU,SAAAC,GAAsF,IAAAC,EAAAD,EAAnFE,YAAeC,EAAoEF,EAApEE,KAAMC,EAA8DH,EAA9DG,KAAMC,EAAwDJ,EAAxDI,KAAwDC,EAAAN,EAAhDO,KAAiBC,EAA+BF,EAAxCR,QACtDW,EAD8FH,EAArBG,OAC3DC,MACdZ,EAAUU,EAASG,YAEzB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAUnB,EAAQmB,MAAb,MAAwBC,IAAOC,YAC5CP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKK,SAAUjB,EAAMK,SAAUA,EAAUa,SAAO,IAChDT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEO,OAAQJ,IAAOI,OACfC,KAAML,IAAOK,KACbC,KAAM1B,EAAQ0B,KACdP,MAAOnB,EAAQmB,MACfQ,MAAO3B,EAAQ2B,MACfC,KAAMlB,EAASmB,OAEjBf,EAAAC,EAAAC,cAACzB,EAAD,KACEuB,EAAAC,EAAAC,cAAClB,EAAD,KACEgB,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAWgB,GAAO1B,EAAL,UACXS,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAKkB,MAAOjC,EAAQkC,MAAMC,gBAAgBF,SAE3CtB,EAAOyB,IAAI,SAAAC,GAAK,OACfvB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACEuB,IAAKD,EAAME,KAAKJ,gBAAgBF,MAAMO,IACtCP,MAAOI,EAAME,KAAKJ,gBAAgBF,MAClCQ,MAAO,CAAEC,OAAQ,kBAIvB5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAmBV,KAAMA,EAAMD,KAAMA,OAM9BL,YAEfA,EAAQ0C,UAAY,CAClBvC,YAAawC,IAAUC,MAAM,CAC3BxC,KAAMuC,IAAUE,OAAOC,WACvBxC,KAAMqC,IAAUI,OAChB1C,KAAMsC,IAAUI,SAElBvC,KAAMmC,IAAUC,MAAM,CACpB7C,QAAS4C,IAAUI,OAAOD,WAC1BpC,OAAQiC,IAAUI,OAAOD,aACxBA,YAGL9C,EAAQgD,aAAe,CACrB7C,YAAawC,IAAUC,MAAM,CAC3BtC,KAAM,KACND,KAAM,QAIH,IAAM4C,EAAS","file":"component---src-templates-project-js-409627e471e0e1174404.js","sourcesContent":["import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport Img from 'gatsby-image';\r\nimport PropTypes from 'prop-types';\r\nimport { graphql } from 'gatsby';\r\nimport Overdrive from 'react-overdrive';\r\nimport styled from 'react-emotion';\r\n\r\nimport { Layout, ProjectHeader, ProjectPagination, SEO } from 'components';\r\nimport config from '../../config/site';\r\n\r\nconst OuterWrapper = styled.div`\r\n  padding: 0 ${props => props.theme.contentPadding};\r\n  margin: -6rem auto 6rem auto;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: relative;\r\n  max-width: ${props => `${props.theme.maxWidths.project}px`};\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Project = ({ pageContext: { slug, prev, next }, data: { project: postNode, images: imgs } }) => {\r\n  const images = imgs.edges;\r\n  const project = postNode.frontmatter;\r\n\r\n  return (\r\n    <Layout>\r\n      <Helmet title={`${project.title} | ${config.siteTitle}`} />\r\n      <SEO postPath={slug} postNode={postNode} postSEO />\r\n      <ProjectHeader\r\n        avatar={config.avatar}\r\n        name={config.name}\r\n        date={project.date}\r\n        title={project.title}\r\n        areas={project.areas}\r\n        text={postNode.html}\r\n      />\r\n      <OuterWrapper>\r\n        <InnerWrapper>\r\n          <Overdrive id={`${slug}-cover`}>\r\n            <Img fluid={project.cover.childImageSharp.fluid} />\r\n          </Overdrive>\r\n          {images.map(image => (\r\n            <Img\r\n              key={image.node.childImageSharp.fluid.src}\r\n              fluid={image.node.childImageSharp.fluid}\r\n              style={{ margin: '2.75rem 0' }}\r\n            />\r\n          ))}\r\n        </InnerWrapper>\r\n        <ProjectPagination next={next} prev={prev} />\r\n      </OuterWrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n\r\nProject.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    slug: PropTypes.string.isRequired,\r\n    next: PropTypes.object,\r\n    prev: PropTypes.object,\r\n  }),\r\n  data: PropTypes.shape({\r\n    project: PropTypes.object.isRequired,\r\n    images: PropTypes.object.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nProject.defaultProps = {\r\n  pageContext: PropTypes.shape({\r\n    next: null,\r\n    prev: null,\r\n  }),\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query ProjectPostBySlug($slug: String!, $absolutePathRegex: String!, $absolutePathCover: String!) {\r\n    images: allFile(\r\n      filter: { absolutePath: { ne: $absolutePathCover, regex: $absolutePathRegex }, extension: { eq: \"jpg\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          childImageSharp {\r\n            fluid(maxWidth: 1600, quality: 90, traceSVG: { color: \"#328bff\" }) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    project: markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      excerpt\r\n      frontmatter {\r\n        cover {\r\n          childImageSharp {\r\n            fluid(maxWidth: 1600, quality: 90, traceSVG: { color: \"#328bff\" }) {\r\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n            }\r\n            resize(width: 800) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        title\r\n        areas\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}